func minimumTotal(triangle [][]int) int {
    if len(triangle) == 0 {return 0}
	if len(triangle) == 1 {return triangle[0][0]}
	
	for i := 1; i < len(triangle); i++ {
		last := triangle[i - 1]
		length := len(triangle[i])
		for j :=0; j < length; j++ {
			if j == 0 {
				triangle[i][0] += last[0]
			} else if j == length - 1 {
				triangle[i][length - 1] += last[length-2]
			} else {
				triangle[i][j] += min(last[j-1], last[j])
			}
		}
	}
	
	return minInSlice(triangle[len(triangle) - 1])
}

func min(i int, j int) int {
	if i > j {return j}
	return i
}

func minInSlice(sli []int) int {
    rs := sli[0]
    for _, num := range sli {
		rs = min(rs, num)
	}
	return rs
}
